/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Core.Utils;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author user
 */
public class DocumentsSearch extends javax.swing.JInternalFrame {

    
     /**
     * 
     */
    private static Map sortByComparator(Map unsortMap) {
 
		List list = new LinkedList(unsortMap.entrySet());
 
		// sort list based on comparator
		Collections.sort(list, new Comparator() {
                        @Override
			public int compare(Object o2, Object o1) {
				return ((Comparable) ((Map.Entry) (o1)).getValue())
                                       .compareTo(((Map.Entry) (o2)).getValue());
			}
		});
 
		// put sorted list into map again
                //LinkedHashMap make sure order in which keys were inserted
		Map sortedMap = new LinkedHashMap();
		for (Iterator it = list.iterator(); it.hasNext();) {
			Map.Entry entry = (Map.Entry) it.next();
			sortedMap.put(entry.getKey(), entry.getValue());
		}
		return sortedMap;
	}
    
    /**
     *
     * @param query
     * @return List of documents containing query
     */
    static Map SearchQuery(String query, Map<String, ArrayList<Integer>> PostingList) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        HashMap<Integer,Integer> RankedResult = new HashMap<>();
        TreeMap<Integer,Integer> RankedResultSorted = new TreeMap<>();
        List<String> words = Arrays.asList(query.toString().trim().split(" "));

        // Gathering result
        for (String w : words) {
            result.add(PostingList.get(w));
        }
        
        // Ranking result if not null
        if (!result.isEmpty()) {
            ArrayList<Integer> TotalDocs = new ArrayList<>();
            for (int i = 0; i < result.size(); i++) {
                for (int j = 0; j < result.get(i).size(); j++) {
                    if (!TotalDocs.contains(result.get(i).get(j))) {
                        TotalDocs.add(result.get(i).get(j));
                    }
                }
            }
            //---------------
            for (Integer d : TotalDocs) {
                RankedResult.put(d, 0);
                for (int i = 0; i < result.size(); i++) {
                    if (result.get(i).contains(d)) {
                        RankedResult.put(d, RankedResult.get(d) + 1);
                    }
                }
            }

            RankedResultSorted.putAll(RankedResult);
        }
        //System.out.println("\n-------------------------\n"+sortByComparator(RankedResultSorted)+"\n-------------------------\n");
        return sortByComparator(RankedResultSorted);
    }
    
    /**
     * Creates new form DocsSearch
     */
    public DocumentsSearch() throws FileNotFoundException, IOException {
        initComponents();
        Utils utils = new Utils();        
        File PLStatistics = new File("F:\\tmp\\321\\PLStatistics.txt");
        File PLdictionnary = new File("F:\\tmp\\321\\PLdictionnary.txt");
        
        ArrayList<String> Statistics = utils.LoadFileToArrayList(PLStatistics);
        Map<String, Integer> Dictionnary = utils.LoadFileToMapStringIntegerList(PLdictionnary);       
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        QueryField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SearchResult = new javax.swing.JTextArea();

        setTitle("Documents Search");
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(1024, 700));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        QueryField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        QueryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueryFieldActionPerformed(evt);
            }
        });

        SearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon16x16.png"))); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        SearchResult.setColumns(20);
        SearchResult.setLineWrap(true);
        SearchResult.setRows(5);
        jScrollPane1.setViewportView(SearchResult);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(QueryField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SearchButton)))
                .addGap(188, 188, 188))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QueryField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {QueryField, SearchButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        
        SearchResult.setText("");
        
        File PLPostingList = new File("F:\\tmp\\321\\PLPostingList.txt");
        Map RankedResultSorted = new LinkedHashMap();
        Map<String, ArrayList<Integer>> PostingsList = new HashMap<>();
        Utils utils = new Utils();
        try {
            PostingsList = utils.LoadFileToMapStringArralListIntegerList(PLPostingList);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DocumentsSearch.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DocumentsSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
        RankedResultSorted = SearchQuery(QueryField.getText(), PostingsList);
        String[] ResultList = RankedResultSorted.toString().replaceAll("[{}]", "").split(",");
       
        int limit =0;
        for (String result : ResultList) { 
            limit++;
            String[] DetailResult = result.split("=");
            ArrayList<String> doc = new ArrayList<>();
            File Data = new File("F:\\tmp\\321\\osac_small\\"+DetailResult[1]+".txt");
            try {
                doc = utils.LoadFileToArrayList(Data);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(DocumentsSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
            SearchResult.setText(SearchResult.getText()+"\n=====================================\n"
                     +result+"\n------------------------------------------\n"+doc);  
            if(limit == 10) break;
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void QueryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QueryFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QueryFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField QueryField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextArea SearchResult;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
